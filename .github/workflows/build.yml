name: CI

on:
  push:
    branches: [ binaries ]
  
  # push:
  #   branches: [ main ]
  #   tags:
  #     - v*
  # pull_request:
  #   branches: [ main ]

env:
  YRS_BRANCH: release-v0.16.10
  CARGO_TERM_COLOR: always

jobs:
  build-native-binaries:
    name: Build native binaries
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          # Windows
          - build: win-x64
            os: ubuntu-latest
            rust: stable
            target: x86_64-pc-windows-gnu
            linker: mingw-w64
            cross: true
          # Linux
          - build: linux-x64
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            cross: false
          - build: linux-x64-musl
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
            cross: false
          - build: linux-armv7
            os: ubuntu-latest
            rust: stable
            target: armv7-unknown-linux-gnueabihf
            linker: gcc-arm-linux-gnueabihf
            cross: true
          - build: linux-armv7-musl
            os: ubuntu-latest
            rust: stable
            target: armv7-unknown-linux-musleabihf
            linker: gcc-arm-linux-gnueabihf
            cross: true
          - build: linux-arm64
            os: ubuntu-latest
            rust: stable
            target: aarch64-unknown-linux-gnu
            linker: gcc-aarch64-linux-gnu
            cross: true
          - build: linux-arm64-musl
            os: ubuntu-latest
            rust: stable
            target: aarch64-unknown-linux-musl
            linker: gcc-aarch64-linux-gnu
            cross: true
          # macOS
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            cross: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.rustup
            target
          key: ${{ runner.os }}-${{ matrix.rust }}

      - name: Install cross
        if: matrix.cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Add musl tools
        run: sudo apt install -y musl musl-dev musl-tools
        if: endsWith(matrix.build, '-musl')

      - name: Install Linker
        if: matrix.cross
        run: |
          sudo apt update
          sudo apt install ${{ matrix.linker }}
          cat .cargo/config.github >> .cargo/config
          
      - name: Install Rust
        run: |
          rustup install ${{ matrix.rust }}
          rustup target add ${{ matrix.target }}
          rustup show

      - name: Clone Yrs repo
        run: |
          git clone https://github.com/y-crdt/y-crdt.git --branch ${YRS_BRANCH} --single-branch yrs

      - name: Patch yffi/Cargo.toml
        run: |
          patch yrs/yffi/Cargo.toml resources/patch/yffi/Cargo.toml.patch

      - name: Build (cargo)
        if: "!matrix.cross"
        run: |
          cd yrs
          RUSTFLAGS="-C target-feature=-crt-static" cargo build --release --target ${{ matrix.target }}

      - name: Build (cross)
        if: matrix.cross
        run: |
          cd yrs
          RUSTFLAGS="-C target-feature=-crt-static" cross build --release --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.build }}
          path: |
            yrs/target/${{ matrix.target }}/release/*yrs.dll
            yrs/target/${{ matrix.target }}/release/*yrs.so
            yrs/target/${{ matrix.target }}/release/*yrs.dylib

  pack-nuget:
    needs: build-native-binaries
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            NativeAssets
          sparse-checkout-cone-mode: false
     
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./NativeAssets

      - name: Nuget pack
        run: |
          cd NativeAssets
          nuget pack YDotNet.NativeAssets.Linux.nuspec
          